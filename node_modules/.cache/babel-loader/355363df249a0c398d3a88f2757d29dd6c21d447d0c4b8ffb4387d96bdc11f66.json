{"ast":null,"code":"import { createStore } from 'redux';\n// const redux=require('redux');\n\nexport const INCREMENT = 'increment';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.payload,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'decrease') {\n    return {\n      counter: state.counter - action.payload,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","INCREMENT","initialState","counter","showCounter","counterReducer","state","action","type","payload","store"],"sources":["C:/Users/ACER/Downloads/01-starting-project (16)/01-starting-project/src/store/index.js"],"sourcesContent":["import {createStore} from 'redux';\r\n// const redux=require('redux');\r\n\r\nexport const INCREMENT='increment';\r\nconst initialState={counter:0,showCounter:true};\r\nconst counterReducer=(state=initialState,action)=>{\r\nif(action.type==='increment'){\r\n    return{\r\n        counter:state.counter+1,\r\n        showCounter:state.showCounter,\r\n    }\r\n}\r\nif(action.type==='decrement'){\r\n    return{\r\n        counter:state.counter-1,\r\n        showCounter:state.showCounter,\r\n    }\r\n}\r\nif(action.type==='increase'){\r\n    return{\r\n        counter:state.counter+action.payload,\r\n        showCounter:state.showCounter,\r\n    }\r\n}\r\nif(action.type==='decrease'){\r\n    return{\r\n        counter:state.counter-action.payload,\r\n        showCounter:state.showCounter,\r\n    }\r\n}\r\nif(action.type==='toggle'){\r\n    return{\r\n        showCounter:!state.showCounter,\r\n        counter:state.counter,\r\n    }\r\n}\r\nreturn state;\r\n}\r\nconst store=createStore(counterReducer);\r\n\r\nexport default store;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AACjC;;AAEA,OAAO,MAAMC,SAAS,GAAC,WAAW;AAClC,MAAMC,YAAY,GAAC;EAACC,OAAO,EAAC,CAAC;EAACC,WAAW,EAAC;AAAI,CAAC;AAC/C,MAAMC,cAAc,GAACA,CAACC,KAAK,GAACJ,YAAY,EAACK,MAAM,KAAG;EAClD,IAAGA,MAAM,CAACC,IAAI,KAAG,WAAW,EAAC;IACzB,OAAM;MACFL,OAAO,EAACG,KAAK,CAACH,OAAO,GAAC,CAAC;MACvBC,WAAW,EAACE,KAAK,CAACF;IACtB,CAAC;EACL;EACA,IAAGG,MAAM,CAACC,IAAI,KAAG,WAAW,EAAC;IACzB,OAAM;MACFL,OAAO,EAACG,KAAK,CAACH,OAAO,GAAC,CAAC;MACvBC,WAAW,EAACE,KAAK,CAACF;IACtB,CAAC;EACL;EACA,IAAGG,MAAM,CAACC,IAAI,KAAG,UAAU,EAAC;IACxB,OAAM;MACFL,OAAO,EAACG,KAAK,CAACH,OAAO,GAACI,MAAM,CAACE,OAAO;MACpCL,WAAW,EAACE,KAAK,CAACF;IACtB,CAAC;EACL;EACA,IAAGG,MAAM,CAACC,IAAI,KAAG,UAAU,EAAC;IACxB,OAAM;MACFL,OAAO,EAACG,KAAK,CAACH,OAAO,GAACI,MAAM,CAACE,OAAO;MACpCL,WAAW,EAACE,KAAK,CAACF;IACtB,CAAC;EACL;EACA,IAAGG,MAAM,CAACC,IAAI,KAAG,QAAQ,EAAC;IACtB,OAAM;MACFJ,WAAW,EAAC,CAACE,KAAK,CAACF,WAAW;MAC9BD,OAAO,EAACG,KAAK,CAACH;IAClB,CAAC;EACL;EACA,OAAOG,KAAK;AACZ,CAAC;AACD,MAAMI,KAAK,GAACV,WAAW,CAACK,cAAc,CAAC;AAEvC,eAAeK,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}